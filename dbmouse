#/usr/bin/bash

#####################################################################
#               windows linux 双系统公用一个蓝牙鼠标                #
# 1, 首先再Linux连接好蓝牙鼠标										#
# 2，在windows下连接好蓝牙鼠标（此时linux下蓝牙已经不能与鼠标相连了)#
# 3，使用PsExec64.exe 从windows的注册表导出蓝牙的配置				#
# 4, 将windows下蓝牙鼠标的配置改到linux下							#
#####################################################################
# get bt address
get_addr(){
	declare -a addrs
	if [[ -f $1  ]];then
		addrs=($(grep  -o 'Keys\\[[:alnum:]]*\\[[:alnum:]]*' $1 | cut -d \\ -f3))
		if [[ -n ${addrs[0]} ]];then
			if [[ -z ${addrs[1]} ]]; then
				address=${addrs[0]}
			else
				while [[ -z $address ]];do
					i=0
					echo "which is you bluetooth mouse'address?"
					for ad in ${addrs[@]};do
						echo "(${i}):$ad"
						((i++))
					done
					read -p "input the num you choose:"
					if [[ -n ${addrs[$REPLY]} ]];then
						address=${addrs[$REPLY]}
					else
						echo "you input a wrong number."
						echo "please try again."
						echo ""
					fi
				done
			fi
		else
			echo "can not find any adress in file $1"
		fi

	else
		echo "$1 do not exist."
		return 1
	fi
	echo "you choose $address"
}
#get linux useful key
get_key(){
	read < ~/1.tmp
	echo "$REPLY" > ~/2.tmp
	echo "" >>~/2.tmp
	declare -A keys
	is_current_addr=0
	while read -r;do
		if [[ "$REPLY" =~ .*$address\] ]];then
			is_current_addr=1
		fi
		if [[ "$REPLY" =~  ^[[:space:]]*$ ]];then
			is_current_addr=0

		fi
		if [ $is_current_addr = 1 ];then
			echo "$REPLY" >> ~/2.tmp
		fi
	done < ~/1.tmp
	echo
	cat ~/2.tmp
}
# windows handle
windows_handle() {
	echo "running windows handle.."
#check powershell exist?
	if [[ -z $(which powershell.exe) ]];then 
		echo "can not find powershell.exe" >&2
		exit 1
	fi
#check PsExec64.exe exist?
	while [[ -z $(which PsExec64.exe) ]];do 
		echo "can not find PsExec64.exe" >&2
		read -p "do you want download pstool.zip?(y,n)"
		case $REPLY in
		y|Y):
			wget https://download.sysinternals.com/files/PSTools.zip $(pwd)
			[[ -d pstool ]] && mkdir pstools
			[[ -n $(which unzip) ]] || sudo apt install unzip
			[[ -n $(which unzip) ]] && unzip PSTools.zip -d ./pstools
			cp ./pstools/PsExec64.exe /mnt/c/Windows/
			rm ./PSTools.zip*
			rm -rf ./pstools
			;;
		n|N):
			exit 1
			;;
		*):
			echo "please input y or n."
			;;
		esac
	done
    powershell.exe PsExec64.exe -s -i  "reg.exe export HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\BTHPORT\Parameters\Keys C:\\$(basename $0).reg"
    [ -f /mnt/c/Windows/PsExec64.exe ] && rm /mnt/c/Windows/PsExec64.exe
	iconv -f utf-16le -t utf-8 /mnt/c/$(basename $0).reg > ~/1.tmp
	get_addr ~/1.tmp
	get_key
	mv ~/2.tmp /mnt/c/$(basename $0)_key.reg
	rm  /mnt/c/$(basename $0).reg
	rm ~/[[:digit:]].tmp
}

#judge in linux or windows
if [[ $(uname -a) =~ .*Microsoft.* ]];then
	sys=windows
	windows_handle
else
	sys=linux
fi


