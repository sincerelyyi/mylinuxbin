#!/bin/bash

function uasage ()
{
	echo "                   iotAutoTest"
	echo "this script auto test iot io board."
	echo "Usage: iotAutoTest [OPTION]."
	echo "OPTION:"
	echo "       -h or --help: show helps."
	echo "       -s or --switchless: not test switch."
	echo "       -n or --number: input serial_num."
	echo "       -i or --ioless: not io test."
	echo "       -4 or --4gless: not 4g test."
	echo "       -p or --productless: not program product software."
    echo "       -w or --workpath:input files path."
}

out_file="/home/jiayi/test_$(date "+%Y%m%d").txt"
#out_file="/media/mint/A0A8-D9F8/test_$(date "+%Y%m%d").txt"
serial_file="IOT_001_Serial.txt"
apphex="WL_IOT_001_v1.04(20250515).hex"
iottemphex="/dev/shm/IOT.hex"
uid_file="/dev/shm/uid"
work_path="/home/jiayi/baidusyncdisk/张家艺工作/江裕彬/WL_IOT_001/input"
#work_path="/media/mint/A0A8-D9F8/input"
PROGRAMFILE=/dev/shm/programfile

#处理参数
until [ $# = 0 ]; do
	case $1 in
		-h|--help)
			uasage
			exit 0
			;;
		-s|--switchless)
            switchless=1
			;;
		-n|--number)
            number=1
			;;
		-i|--ioless)
            ioless=1
			;;
		-4|--4gless)
            simless=1
			;;
		-p|--productless)
            productless=1
			;;
		-w|--workpath)
            work_path=$2
            shift
			;;
		-*)
			echo "no this OPTION."
			exit 1
			;;
	esac
	shift
done

#进入工作目录
cd "$work_path"

# 设置串口
stty -F /dev/ttyUSB0 115200 raw -echo
if [[ $(echo $?) != "0" ]];then
  echo -e "\033[01;05;31mcan not open /dev/ttyUSB0\033[00m\n"
  exit
fi

if [ -z "$ioless" ]; then
    echo ""
    echo ""

    # 烧录pin脚测试程序
    stmprogram -d STM32F103C8 -i SWD -s 4000 iotest.hex > "$PROGRAMFILE"
    while  read -r line; do
        if [[ "$line" == *"Error:"* ]]; then
            echo
            echo "$line"
            echo -e "\033[01;05;31mprogram iotest.hex software failed\033[00m\n"
            exit
        fi
        if [[ "$line" == *"FAILED"* ]]; then
            echo
            echo "$line"
            echo -e "\033[01;05;31mprogram iotest.hex software failed\033[00m\n"
            exit
        fi
        if [[ "$line" == *"Script processing completed"* ]]; then
            echo
            echo -e "program iotest.hex software passed.\n"
            break
        fi
    done < "$PROGRAMFILE"

    # 检查io测试是否通过
    while  read -r line; do
        echo "$line" | tr -d "\r" | tee -a "$out_file"
        if [[ "$line" == *"STM32F103 UID:"* ]]; then
            stmuid=$(echo -n "${line##*\ }" | tr -d "\r")
        fi

        if [[ "$line" == *"auto test passed"* ]]; then
            break
        fi
        if [[ "$line" == *"auto test failed!"* ]]; then
            exit
        fi
    done < /dev/ttyUSB0
fi

if [ -z "$simless" ]; then
    echo ""
    echo ""

    # 烧录4G测试程序
    stmprogram -d STM32F103C8 -i SWD -s 4000 WL_IOT_001_TEST.hex > "$PROGRAMFILE"
    while  read -r line; do
        if [[ "$line" == *"Error:"* ]]; then
            echo
            echo "$line"
            echo -e "\033[01;05;31mprogram sim 4g test software failed\033[00m\n"
            exit
        fi
        if [[ "$line" == *"FAILED"* ]]; then
            echo
            echo "$line"
            echo -e "\033[01;05;31mprogram sim 4g test software failed\033[00m\n"
            exit
        fi
        if [[ "$line" == *"Script processing completed"* ]]; then
            echo
            echo -e "program sim 4g test software passed.\n"
            break
        fi
    done < "$PROGRAMFILE"

    # 检查4G测试是否通过
    while  read -r line; do
        # 检查是否包含"auto test passed"
        echo "$line" | iconv -f GBK -t utf-8 | tr -d "\r" | tee -a "$out_file"
        if [[ "$line" == *"+CCID: "* ]]; then
            ccid=$(echo -n "${line##*\ }" | tr -d "\r")
            break
        fi
        if [[ "$line" == *"ERROR"* ]]; then
            echo -e "\033[01;05;31m4G modle test failed\033[00m\n"
            exit
        fi
    done < /dev/ttyUSB0

    echo -en TEST > /dev/ttyUSB0

    while  read -r line; do
        newline=$(echo "$line" | iconv -f GBK -t utf-8)
        echo "$newline" | tr -d "\r"| tee -a "$out_file"
        if [[ "$newline" == *"wifi扫描+基站定位"* ]]; then
            break
        fi
    done < /dev/ttyUSB0

    while  read -r line; do
        newline=$(echo "$line" | iconv -f GBK -t utf-8)
        echo "$newline" | tr -d "\r"| tee -a "$out_file"
        if [[ "$newline" == *"CARD：10101010"* ]]; then
            break
        fi
    done < /dev/ttyUSB0

    if [ -z "$switchless" ]; then
        while  read -r line; do
            newline=$(echo "$line" | iconv -f GBK -t utf-8)
            echo "$newline"
            if [[ "$newline" == *"拨位开关：0111"* ]]; then
                break
            fi
        done < /dev/ttyUSB0

        while  read -r line; do
            newline=$(echo "$line" | iconv -f GBK -t utf-8)
            echo "$newline"
            if [[ "$newline" == *"拨位开关：0011"* ]]; then
                break
            fi
        done < /dev/ttyUSB0

        while  read -r line; do
            newline=$(echo "$line" | iconv -f GBK -t utf-8)
            echo "$newline"
            if [[ "$newline" == *"拨位开关：0001"* ]]; then
                break
            fi
        done < /dev/ttyUSB0

        while  read -r line; do
            newline=$(echo "$line" | iconv -f GBK -t utf-8)
            echo "$newline"
            if [[ "$newline" == *"拨位开关：0000"* ]]; then
                break
            fi
        done < /dev/ttyUSB0
    fi

    while  read -r line; do
        newline=$(echo "$line" | iconv -f GBK -t utf-8)
        echo "$newline"
        if [[ "$newline" == *"拨位开关：1111"* ]]; then
            break
        fi
    done < /dev/ttyUSB0
fi

if [ -n "$productless" ]; then
    exit
fi

if [ -s "$serial_file" ]; then
    serial_num=$(head -c 10 "$serial_file")
fi
if [ -n "$number" ]; then
    serial_num=""
fi
while [[ "$serial_num" != 1[2-3]?[0-1]?[0-3]???? ]]; do
    read -p "no availd serial_num,please enter 1250101000:" serial_num
    serial_num=$(echo $serial_num | grep -oE "12[[:digit:]]{8}")
done

cp "$apphex" "$iottemphex"
lastline=$(tail -n 1 "$iottemphex")
if [[ "$lastline" == ":00000001FF"* ]]; then
    sed -i '$d' "$iottemphex"
    serial_line=$(tail -n 1 "$iottemphex")
    if [[ "$serial_line" =~ ":04FFF000" ]]; then
        sed -i '$d' "$iottemphex"
    fi
else
    echo "no availd product software"
    exit
fi

da=$(printf "%.8x\n" "$serial_num" | xxd -r -p | od -A n -tx4)
serial_line=":04FFF000$(echo -n ${da^^})"
echo -n "$serial_line" | tr -d ':' | basenc -d --base16 > /dev/shm/sum;
sum=$(checksum /dev/shm/sum)
sum=${sum##*:}
sum=$(echo "obase=16; ibase=16; 100-${sum^^}" | bc)
if [[ "$sum" == [[:alnum:]] ]];then
    sum="0"$sum
fi
if [[  "$sum" == [[:alnum:]][[:alnum:]][[:alnum:]] ]];then
    sum="00"
fi
serial_line="$serial_line$sum"
echo -e "$serial_line\r" >> "$iottemphex"
echo "$lastline" >> "$iottemphex"

# 烧录APP程序
stmprogram -d STM32F103C8 -i SWD -s 4000 "$iottemphex" > "$PROGRAMFILE"
while  read -r line; do
    if [[ "$line" == *"Error:"* ]]; then
       echo
       echo "$line"
       echo -e "\033[01;05;31mprogram product software failed\033[00m\n"
       exit
    fi
    if [[ "$line" == *"FAILED"* ]]; then
       echo
       echo "$line"
       echo -e "\033[01;05;31mprogram product software failed\033[00m\n"
       exit
    fi
    if [[ "$line" == *"Script processing completed"* ]]; then
       echo
       echo
       echo "mcu序列号:$stmuid" | tee -a "$out_file" | tee -a "$uid_file"
       echo "sim卡序列号:$ccid" | tee -a "$out_file" | tee -a "$uid_file"
       echo "serial_num:$serial_num" | tee -a "$out_file" | tee -a "$uid_file"
       serial_num=$(( "$serial_num" + 1 ))
       echo -en "$serial_num\0" > "$serial_file"
       echo
       echo -en "\033[01;05;32mprogram product software passed\033[00m\n"
       break
    fi
done < "$PROGRAMFILE"

echo -e "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n" | tee -a "$out_file" | tee -a "$uid_file"
if [ -e "$PROGRAMFILE" ];then
    rm "$PROGRAMFILE"
fi
