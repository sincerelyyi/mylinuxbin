#!/bin/bash


function uasage ()
{
	echo "                   tkAutoTest"
	echo "this script auto test tk io board."
	echo "Usage: tkAutoTest [OPTION]."
	echo "OPTION:"
	echo "       -h or --help: show helps."
	echo "       -r or --regen: regenerate all_xxxxxx.hex file."
	echo "       -t or --test: no program all_xxxxxx.hex file."
    echo "       -S or --speak: speak some important message."
}

function generate_hex ()
{
    touch myware/boardtest.c
    sed -E -i  's/[ \t]*#define[ \t]+BOARD_TEST[ \t]+0/#define BOARD_TEST 1/g' Core/Inc/main.h
    make
    cat ../bootloader_IO002/build/Bootloader_UDisk_USB.hex  \
        build/WL_IO_F407.hex \
        ../f407_iap/build/WL_IO_F407.hex > "all_$(date "+%Y%m%d").hex"
}

# 全局变量
testname="/home/jiayi/autotest_$(date "+%Y%m%d").txt"
infoname="/home/jiayi/io_info_$(date "+%Y%m%d").txt"
PROGRAMFILE=/dev/shm/programfile

cd ~/mysoftware/stm32/tk_software
#处理参数
until [ $# = 0 ]; do
	case $1 in
		-h|--help)
			uasage 
			exit 0
			;;
		-r|--regenerate)
		   generate_hex 
           exit 0
			;;
		-t|--test)
		   test_enter=1
			;;
        -S|--speak)
            speak=1
            ;;
		-*)
			echo "no this OPTION."
			exit 1
			;;
	esac
	shift
done
#speak function
function speak_fun(){
    if [ "$speak" = "1" ]; then
        which espeak > /dev/null && espeak "$1"
    fi
}
#是否需要生成all_xxxxxx.hex
hexname=$(ls all_*.hex)
if  [[ ! "$hexname" =~ $(date "+%Y%m%d") ]]; then
    if [ -a "$hexname" ]; then
        rm "$hexname"
    fi
    generate_hex
    hexname=$(ls all_*.hex)
fi    

# 烧录all_xxxxxx.hex测试程序
if [[ "$test_enter" != 1 ]]; then
    stmprogram -d STM32F407VE -i SWD -s 4000 "$hexname" > "$PROGRAMFILE"
    while  read -r line; do
        if [[ "$line" == *"Error:"* ]]; then
            echo
            echo "$line"
            echo -e "\033[01;03;31mprogram all_xxxxxx.hex software failed\033[00m\n"
            speak_fun "program all.hex sotfware failed."
            exit 
        fi
        if [[ "$line" == *"FAILED"* ]]; then
            echo
            echo "$line"
            echo -e "\033[01;03;31mprogram all_xxxxxx.hex software failed\033[00m\n"
            speak_fun "program all.hex sotfware failed."
            exit 
        fi
        if [[ "$line" == *"Script processing completed"* ]]; then
            echo
            echo -e "program iotest.hex software passed.\n"
            break 
        fi
    done < "$PROGRAMFILE"
fi
echo ""
echo ""

# 设置串口
stty -F /dev/ttyUSB0 115200 raw -echo
if [[ $(echo $?) != "0" ]];then
    echo -e "\033[01;05;31mcan not open /dev/ttyUSB0\033[00m\n"
    speak_fun "can not open /dev/ttyUSB0."
    exit
fi
# 检查io测试是否通过
while  read -r line; do
    echo $line | tee -a $testname
    if [[ "$line" == *"no lkt"* ]]; then
       exit 
    fi
    if [[ "$line" == *"burn failed"* ]]; then
       exit 
    fi
    if [[ "$line" == *"fm test failed"* ]]; then
       exit 
    fi
    if [[ "$line" == *"LKT had be burned successfully"* ]]; then
        lkt_passed="1"
    fi
    if [[ "$line" == *"fm test passed"* ]]; then
        fm_passed="1"
    fi
    if [[ "$line" == *"uart2-5 test passed"* ]]; then
        uart_passed="1"
    fi
    if [[ "$line" == *"input test passed"* ]]; then
        input_passed="1"
    fi
    if [[ "$line" == *"key test passed"* ]]; then
        key_passed="1"
    fi
    if [[ "$line" == *">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"* ]]; then
       if [[ $lkt_passed && $uart_passed && $fm_passed && $input_passed && $key_passed  ]]; then
           break
       else
            echo "test failed" | tee -a $testname
            speak_fun "test failed."
           exit 
       fi
    fi
done < /dev/ttyUSB0
sleep 1
time iap_bin  /dev/ttyACM0 WL_IO_F407.bin
if [[ $? != 0 ]]; then
    echo "iap_bin failed" >> $testname
    echo -e "\033[01;05;31miap_bin failed\033[0m"
    speak_fun "iap_bin failed."
    exit
fi
io_info /dev/ttyUSB0 | tee -a $infoname
if [ -e "$PROGRAMFILE" ];then
    rm "$PROGRAMFILE"
fi
